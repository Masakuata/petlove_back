openapi: 3.0.0
info:
  title: PetLove Service
  version: 0.6.4
servers:
  - description: Produccion HTTPS
    url: 'https://petloveback-x7smt.ondigitalocean.app'
components:
  headers:
    Token:
      schema:
        type: string
        title: Token identificador de la sesion de usuario
        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
  responses:
    '400':
      description: La solicitud esta incompleta o malformada
    '404':
      description: El recurso buscado no se encuentra registrado
    '406':
      description: La solicitud o su contenido no es aceptable y no puede ser procesada
    '500':
      description: Error interno del servidor
    response_token:
      description: Token identificador de la sesion de usuario
      headers:
        Token:
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
    response_publicUsuario:
      description: .
      content:
        application/json:
          schema:
            type: object
            title: Informacion publica de usuario
            description: Informacion publica de un usuario registrado
            required:
              - username
              - email
            properties:
              username:
                allOf:
                  - type: string
                    title: Username del usuario
                    example: juanito
              email:
                allOf:
                  - type: string
                    title: Email del usuario
                    minLength: 5
                    maxLength: 320
                    example: correo@dominio.com
              token:
                allOf:
                  - type: string
                    title: Token identificador de la sesion de usuario
                    example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
    invalid_token:
      description: El token provisto es invalido o ha expirado
paths:
  /usuario:
    summary: Catalogo de usuarios
    description: Endpoint para realizar diversas operaciones respecto al catalogo de usuarios del sistema
    get:
      summary: Obten los usuarios registrados
      description: Devuelve todos los usuarios registrados
      tags:
        - Usuario
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      responses:
        '200':
          description: Se ha retornado por lo menos un usuario registrado
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - type: object
                      title: Informacion publica de usuario
                      description: Informacion publica de un usuario registrado
                      required:
                        - username
                        - email
                      properties:
                        username:
                          allOf:
                            - type: string
                              title: Username del usuario
                              example: juanito
                        email:
                          allOf:
                            - type: string
                              title: Email del usuario
                              minLength: 5
                              maxLength: 320
                              example: correo@dominio.com
                        token:
                          allOf:
                            - type: string
                              title: Token identificador de la sesion de usuario
                              example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
                    - type: object
                      title: Informacion publica de usuario
                      description: Informacion publica de un usuario registrado
                      required:
                        - username
                        - email
                      properties:
                        username:
                          allOf:
                            - type: string
                              title: Username del usuario
                              example: juanito
                        email:
                          allOf:
                            - type: string
                              title: Email del usuario
                              minLength: 5
                              maxLength: 320
                              example: correo@dominio.com
                        token:
                          allOf:
                            - type: string
                              title: Token identificador de la sesion de usuario
                              example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
                    - type: object
                      title: Informacion publica de usuario
                      description: Informacion publica de un usuario registrado
                      required:
                        - username
                        - email
                      properties:
                        username:
                          allOf:
                            - type: string
                              title: Username del usuario
                              example: juanito
                        email:
                          allOf:
                            - type: string
                              title: Email del usuario
                              minLength: 5
                              maxLength: 320
                              example: correo@dominio.com
                        token:
                          allOf:
                            - type: string
                              title: Token identificador de la sesion de usuario
                              example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '204':
          description: No hay ningun usuario registrado
        '500':
          description: Error interno del servidor
    post:
      summary: Crea un nuevo usuario en el sistema
      description: Crea un nuevo usuario en el sistema con la informacion provista
      tags:
        - Usuario
      requestBody:
        description: Informacion necesaria para registrar un nuevo usuario
        content:
          application/json:
            schema:
              type: object
              allOf:
                - type: object
                  title: Usuario para registrar
                  description: Informacion del usuario a registrar
                  required:
                    - username
                    - email
                    - password
                  properties:
                    username:
                      allOf:
                        - type: string
                          title: Username del usuario
                          example: juanito
                    email:
                      allOf:
                        - type: string
                          title: Email del usuario
                          minLength: 5
                          maxLength: 320
                          example: correo@dominio.com
                    password:
                      allOf:
                        - type: string
                          title: Contrasena del usuario
                          example: password981
              properties:
                token:
                  type: string
      responses:
        '201':
          description: La solicitud fue exitosa y el nuevo usuario ha sido creado
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          headers:
            Token:
              schema:
                type: string
                title: Token identificador de la sesion de usuario
                example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: La solicitud o su contenido no es aceptable y no puede ser procesada
        '409':
          description: El username o correo ya han sido registrados
        '500':
          description: Error interno del servidor
    delete:
      summary: Elimina un usuario registrado
      description: Elimina de forma permanente la informacion de usuario identificado por sus credenciales
      tags:
        - Usuario
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      responses:
        '200':
          description: La informacion del usuario ha sido eliminada.
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: No se ha encontrado ningun usuario con esas credenciales
        '406':
          description: El token provisto no coincide con las credenciales indicadas o ha expirado
        '500':
          description: Error interno del servidor
  /usuario/login:
    summary: Inica sesion con un usuario registrado
    description: Obten un nuevo token con las credenciales de un usuario registrado
    post:
      summary: Inica sesion con un usuario registrado
      description: Obten un nuevo token con las credenciales de un usuario registrado
      tags:
        - Usuario
        - Sesion
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Credenciales de inicio de sesion
              description: Correo electronico y contrasena de un usuario registrado
              required:
                - email
                - password
              properties:
                email:
                  allOf:
                    - type: string
                      title: Email del usuario
                      minLength: 5
                      maxLength: 320
                      example: correo@dominio.com
                password:
                  allOf:
                    - type: string
                      title: Contrasena del usuario
                      example: password981
      responses:
        '200':
          description: Credenciales correctas y sesion iniciada
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: Las credenciales no coinciden con ningun usuario registrado
        '406':
          description: La solicitud o su contenido no es aceptable y no puede ser procesada
        '500':
          description: Error interno del servidor
  /usuario/token:
    get:
      summary: Obten la informacion de un usuario a partir de su token
      description: Comprueba la validez de un token y retorna la informacion asociada al token
      tags:
        - Usuario
        - Sesion
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      responses:
        '200':
          description: El token es valido
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: No existen registros de un usuario asociado al token
        '406':
          description: El token es invalido o ya ha expirado
        '500':
          description: Error interno del servidor
  '/usuario/{username}/username':
    summary: Cambia el username de un usuario
    description: Actualiza el username de un usuario identificado por su username actual
    put:
      summary: Cambia el username de un usuario
      description: Actualiza el username de un usuario identificado por su username actual
      tags:
        - Usuario
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: username
          description: Username del usuario
          in: path
          schema:
            type: string
            title: Username del usuario
            example: juanito
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
              properties:
                username:
                  type: string
                  title: Username del usuario
                  example: juanito
      responses:
        '200':
          description: Se ha actualizado el username del usuario
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El token no coincide con ningun usuario registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '409':
          description: El nuevo username ya se encuentra en uso por otro usuario
        '500':
          description: Error interno del servidor
  '/usuario/{username}/email':
    summary: Cambia el email de un usuario
    description: Actualiza el email de un usuario identificado por su username
    put:
      summary: Cambia el email de un usuario
      description: Actualiza el email de un usuario identificado por su username
      tags:
        - Usuario
      parameters:
        - name: username
          description: Username del usuario
          in: path
          schema:
            type: string
            title: Username del usuario
            example: juanito
          required: true
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  title: Email del usuario
                  minLength: 5
                  maxLength: 320
                  example: correo@dominio.com
      responses:
        '200':
          description: Se ha actualizado el email del usuario
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El token no coincide con ningun usuario registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '409':
          description: El nuevo email ya se encuentra en uso por otro usuario
        '500':
          description: Error interno del servidor
  '/usuario/{username}/password':
    summary: Cambia la contraseña de un usuario
    description: Actualiza la contraseña del usuario identificado por su username
    put:
      summary: Cambia la contraseña de un usuario
      description: Actualiza la contraseña del usuario identificado por su username
      tags:
        - Usuario
      parameters:
        - name: username
          description: Username del usuario
          in: path
          schema:
            type: string
            title: Username del usuario
            example: juanito
          required: true
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              properties:
                password:
                  type: string
                  title: Contrasena del usuario
                  example: password981
      responses:
        '200':
          description: Se ha actualizado la contraseña del usuario
          content:
            application/json:
              schema:
                type: object
                title: Informacion publica de usuario
                description: Informacion publica de un usuario registrado
                required:
                  - username
                  - email
                properties:
                  username:
                    allOf:
                      - type: string
                        title: Username del usuario
                        example: juanito
                  email:
                    allOf:
                      - type: string
                        title: Email del usuario
                        minLength: 5
                        maxLength: 320
                        example: correo@dominio.com
                  token:
                    allOf:
                      - type: string
                        title: Token identificador de la sesion de usuario
                        example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El token no coincide con ningun usuario registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  /producto:
    summary: Catalogo de productos
    description: Endpoint para realizar operaciones sobre el catalogo de productos
    get:
      summary: Retorna los productos registrados
      description: Retorna los productos registrados
      tags:
        - Producto
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: nombre
          description: Cadena para buscar producto por nombre
          in: query
          schema:
            type: string
          required: false
        - name: tipo_cliente
          description: Id del tipo de cliente
          in: query
          schema:
            type: number
            format: integer
          required: false
      responses:
        '200':
          description: Se ha retornado la informacion de los productos registrados. El precio depende del tipo de cliente
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      required:
                        - id
                      allOf:
                        - type: object
                          title: Producto de venta
                          required:
                            - nombre
                            - presentacion
                            - raza
                            - precio
                          properties:
                            nombre:
                              type: string
                            presentacion:
                              type: string
                            tipoMascota:
                              type: string
                            raza:
                              type: string
                            precio:
                              type: number
                              format: decimal
                            cantidad:
                              type: number
                              format: integer
                      properties:
                        id:
                          type: number
                          format: integer
        '204':
          description: No hay productos registrados
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    post:
      summary: Registra un nuevo producto
      description: Registra un nuevo producto
      tags:
        - Producto
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: Producto de venta
              required:
                - nombre
                - presentacion
                - raza
                - precio
              properties:
                nombre:
                  type: string
                presentacion:
                  type: string
                tipoMascota:
                  type: string
                raza:
                  type: string
                precio:
                  type: number
                  format: decimal
                cantidad:
                  type: number
                  format: integer
      responses:
        '201':
          description: Se ha registrado el producto
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                allOf:
                  - type: object
                    title: Producto de venta
                    required:
                      - nombre
                      - presentacion
                      - raza
                      - precio
                    properties:
                      nombre:
                        type: string
                      presentacion:
                        type: string
                      tipoMascota:
                        type: string
                      raza:
                        type: string
                      precio:
                        type: number
                        format: decimal
                      cantidad:
                        type: number
                        format: integer
                properties:
                  id:
                    type: number
                    format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  '/producto/{id_producto}':
    summary: Realiza operaciones sobre un producto
    description: Endpoint para realizaro operaciones sobre un producto identificado por su id
    delete:
      summary: Elimina un producto
      description: Elimina un producto identificado por su id
      tags:
        - Producto
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_producto
          description: Id del producto
          in: path
          schema:
            type: number
            format: integer
          required: true
      responses:
        '200':
          description: Se ha eliminado el producto
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '409':
          description: El producto se encuentra registrado en una o mas ventas
        '500':
          description: Error interno del servidor
  '/producto/{id_producto}/precio':
    post:
      summary: Establece los precios del producto por tipo de cliente
      description: Establece los precios del producto por tipo de cliente
      tags:
        - Producto
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_producto
          description: Id del producto
          in: path
          schema:
            type: number
            format: integer
          required: true
        - name: tipo_cliente
          description: Id del tipo de cliente
          in: query
          schema:
            type: number
            format: integer
          required: false
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                allOf:
                  - type: object
                    required:
                      - tipoCliente
                      - precio
                    properties:
                      tipoCliente:
                        type: number
                        format: integer
                      precio:
                        type: number
                        format: decimal
                  - type: object
                    required:
                      - tipoCliente
                      - precio
                    properties:
                      tipoCliente:
                        type: number
                        format: integer
                      precio:
                        type: number
                        format: decimal
                  - type: object
                    required:
                      - tipoCliente
                      - precio
                    properties:
                      tipoCliente:
                        type: number
                        format: integer
                      precio:
                        type: number
                        format: decimal
      responses:
        '200':
          description: Se han actualizado los precios del producto
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  /cliente:
    summary: Catalogo de clientes
    description: Endpoint para realizar operaciones sobre el catalogo de productos
    get:
      summary: Retorna los clientes registrados
      description: Retorna los clientes registrados
      tags:
        - Cliente
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: nombre
          description: Cadena para buscar cliente por nombre
          in: query
          schema:
            type: string
            title: Username del usuario
            example: juanito
          required: false
        - name: cant
          description: Cantidad de clientes a retornar
          in: query
          schema:
            type: number
            format: integer
            default: 10
          required: false
      responses:
        '200':
          description: Se han retornado una version minima de los clientes registrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      allOf:
                        - type: object
                          required:
                            - id
                          properties:
                            id:
                              type: number
                              format: integer
                      properties:
                        nombre:
                          type: string
                        tipoCliente:
                          type: number
                          format: integer
                        RFC:
                          type: string
                        email:
                          type: string
                        telefono:
                          type: string
        '202':
          description: Se han retornado los resultados de la busqueda de clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      allOf:
                        - type: object
                          properties:
                            tipoCliente:
                              type: number
                              format: integer
                            nombre:
                              type: string
                            email:
                              allOf:
                                - type: string
                                  title: Email del usuario
                                  minLength: 5
                                  maxLength: 320
                                  example: correo@dominio.com
                            RFC:
                              type: string
                            direcciones:
                              type: array
                              items:
                                type: string
                                example: Cerrada Tajin 12
                            telefono:
                              type: string
                        - type: object
                          required:
                            - id
                          properties:
                            id:
                              type: number
                              format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    post:
      summary: Registrar un nuevo cliente
      description: Registrar un nuevo cliente
      tags:
        - Cliente
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tipoCliente:
                  type: number
                  format: integer
                nombre:
                  type: string
                email:
                  allOf:
                    - type: string
                      title: Email del usuario
                      minLength: 5
                      maxLength: 320
                      example: correo@dominio.com
                RFC:
                  type: string
                direcciones:
                  type: array
                  items:
                    type: string
                    example: Cerrada Tajin 12
                telefono:
                  type: string
      responses:
        '201':
          description: Se ha creado el cliente
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      tipoCliente:
                        type: number
                        format: integer
                      nombre:
                        type: string
                      email:
                        allOf:
                          - type: string
                            title: Email del usuario
                            minLength: 5
                            maxLength: 320
                            example: correo@dominio.com
                      RFC:
                        type: string
                      direcciones:
                        type: array
                        items:
                          type: string
                          example: Cerrada Tajin 12
                      telefono:
                        type: string
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '409':
          description: El email ya se encuentra registrado para otro cliente
        '500':
          description: Error interno del servidor
  '/cliente/{id_cliente}':
    summary: Realiza operaciones sobre un cliente
    description: Endpoint para realizar operaciones sobre un cliente identificado por su id
    put:
      summary: Actualiza la informacion de un cliente
      description: Actualiza la informacion de un cliente identificado por su id
      tags:
        - Cliente
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_cliente
          description: Id del cliente
          in: path
          schema:
            type: number
            format: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                tipoCliente:
                  type: number
                  format: integer
                nombre:
                  type: string
                email:
                  allOf:
                    - type: string
                      title: Email del usuario
                      minLength: 5
                      maxLength: 320
                      example: correo@dominio.com
                RFC:
                  type: string
                direcciones:
                  type: array
                  items:
                    type: string
                    example: Cerrada Tajin 12
                telefono:
                  type: string
      responses:
        '200':
          description: Se ha actualizado la informacion del cliente
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    properties:
                      tipoCliente:
                        type: number
                        format: integer
                      nombre:
                        type: string
                      email:
                        allOf:
                          - type: string
                            title: Email del usuario
                            minLength: 5
                            maxLength: 320
                            example: correo@dominio.com
                      RFC:
                        type: string
                      direcciones:
                        type: array
                        items:
                          type: string
                          example: Cerrada Tajin 12
                      telefono:
                        type: string
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '409':
          description: El email ya se encuentra registrado para otro cliente
        '500':
          description: Error interno del servidor
    delete:
      summary: Elimina un cliente
      description: Elimina una cliente identificado por su id
      tags:
        - Cliente
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_cliente
          description: Id del cliente
          in: path
          schema:
            type: number
            format: integer
          required: true
      responses:
        '200':
          description: Se ha eliminado el cliente
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  /venta:
    summary: Catalogo de ventas
    description: Endpoint para realizar operaciones sobre el catalogo de ventas
    get:
      summary: Retorna las ventas registradas
      description: Retorna las ventas registradas con sus productos
      tags:
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: nombre
          description: Cadena para buscar cliente por nombre
          in: query
          schema:
            type: string
            title: Username del usuario
            example: juanito
          required: false
        - name: fecha
          description: Fecha para buscar ventas
          in: query
          schema:
            type: string
            format: date
            example: 10-07-2023
          required: false
        - name: enviar
          description: Enviar correo con excel de ventas de fecha
          in: query
          schema:
            type: boolean
          required: false
      responses:
        '200':
          description: Se han retornado las ventas registradas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      allOf:
                        - type: object
                          required:
                            - productos
                          allOf:
                            - type: object
                              required:
                                - cliente
                                - pagado
                                - fecha
                              properties:
                                cliente:
                                  type: object
                                  allOf:
                                    - type: object
                                      allOf:
                                        - type: object
                                          properties:
                                            tipoCliente:
                                              type: number
                                              format: integer
                                            nombre:
                                              type: string
                                            email:
                                              allOf:
                                                - type: string
                                                  title: Email del usuario
                                                  minLength: 5
                                                  maxLength: 320
                                                  example: correo@dominio.com
                                            RFC:
                                              type: string
                                            direcciones:
                                              type: array
                                              items:
                                                type: string
                                                example: Cerrada Tajin 12
                                            telefono:
                                              type: string
                                        - type: object
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: number
                                              format: integer
                                pagado:
                                  type: boolean
                                fecha:
                                  type: string
                                  format: date
                                  example: 10-09-2023
                                facturado:
                                  type: boolean
                          properties:
                            productos:
                              type: array
                              items:
                                type: object
                                allOf:
                                  - type: object
                                    required:
                                      - producto
                                      - cantidad
                                    properties:
                                      producto:
                                        type: number
                                        format: integer
                                        example: 8
                                      cantidad:
                                        type: number
                                        format: integer
                                        example: 10
                                  - type: object
                                    required:
                                      - producto
                                      - cantidad
                                    properties:
                                      producto:
                                        type: number
                                        format: integer
                                        example: 8
                                      cantidad:
                                        type: number
                                        format: integer
                                        example: 10
                        - type: object
                          required:
                            - id
                          properties:
                            id:
                              type: number
                              format: integer
        '201':
          description: Se ha enviado el correo con las ventas indicadas
        '204':
          description: No hay ventas registradas
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    post:
      summary: Registra una nueva venta
      description: Registra una nueva venta
      tags:
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                cliente:
                  type: number
                  format: integer
                pagado:
                  type: boolean
                fecha:
                  type: string
                  format: date
                  example: 10-09-2023
                facturado:
                  type: boolean
      responses:
        '201':
          description: Se ha registrado la venta
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    required:
                      - productos
                    allOf:
                      - type: object
                        required:
                          - cliente
                          - pagado
                          - fecha
                        properties:
                          cliente:
                            type: object
                            allOf:
                              - type: object
                                allOf:
                                  - type: object
                                    properties:
                                      tipoCliente:
                                        type: number
                                        format: integer
                                      nombre:
                                        type: string
                                      email:
                                        allOf:
                                          - type: string
                                            title: Email del usuario
                                            minLength: 5
                                            maxLength: 320
                                            example: correo@dominio.com
                                      RFC:
                                        type: string
                                      direcciones:
                                        type: array
                                        items:
                                          type: string
                                          example: Cerrada Tajin 12
                                      telefono:
                                        type: string
                                  - type: object
                                    required:
                                      - id
                                    properties:
                                      id:
                                        type: number
                                        format: integer
                          pagado:
                            type: boolean
                          fecha:
                            type: string
                            format: date
                            example: 10-09-2023
                          facturado:
                            type: boolean
                    properties:
                      productos:
                        type: array
                        items:
                          type: object
                          allOf:
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  '/venta/{id_venta}':
    summary: Realiza operaciones sobre una venta
    description: Realiza operaciones sobre una venta identificada por su id
    get:
      summary: Retorna la informacion de la venta
      description: Retorna la informacion registrada de la venta identificada por su id
      tags:
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
      responses:
        '200':
          description: Se ha retornado la informacion de la venta
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    required:
                      - productos
                    allOf:
                      - type: object
                        required:
                          - cliente
                          - pagado
                          - fecha
                        properties:
                          cliente:
                            type: object
                            allOf:
                              - type: object
                                allOf:
                                  - type: object
                                    properties:
                                      tipoCliente:
                                        type: number
                                        format: integer
                                      nombre:
                                        type: string
                                      email:
                                        allOf:
                                          - type: string
                                            title: Email del usuario
                                            minLength: 5
                                            maxLength: 320
                                            example: correo@dominio.com
                                      RFC:
                                        type: string
                                      direcciones:
                                        type: array
                                        items:
                                          type: string
                                          example: Cerrada Tajin 12
                                      telefono:
                                        type: string
                                  - type: object
                                    required:
                                      - id
                                    properties:
                                      id:
                                        type: number
                                        format: integer
                          pagado:
                            type: boolean
                          fecha:
                            type: string
                            format: date
                            example: 10-09-2023
                          facturado:
                            type: boolean
                    properties:
                      productos:
                        type: array
                        items:
                          type: object
                          allOf:
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    put:
      summary: Actualiza la informacion de una venta
      description: Actualiza la informacion de una venta identificada por su id
      tags:
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - cliente
                - pagado
                - fecha
              properties:
                cliente:
                  type: object
                  allOf:
                    - type: object
                      allOf:
                        - type: object
                          properties:
                            tipoCliente:
                              type: number
                              format: integer
                            nombre:
                              type: string
                            email:
                              allOf:
                                - type: string
                                  title: Email del usuario
                                  minLength: 5
                                  maxLength: 320
                                  example: correo@dominio.com
                            RFC:
                              type: string
                            direcciones:
                              type: array
                              items:
                                type: string
                                example: Cerrada Tajin 12
                            telefono:
                              type: string
                        - type: object
                          required:
                            - id
                          properties:
                            id:
                              type: number
                              format: integer
                pagado:
                  type: boolean
                fecha:
                  type: string
                  format: date
                  example: 10-09-2023
                facturado:
                  type: boolean
      responses:
        '200':
          description: Se ha actualizado la informacion de la venta
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    required:
                      - productos
                    allOf:
                      - type: object
                        required:
                          - cliente
                          - pagado
                          - fecha
                        properties:
                          cliente:
                            type: object
                            allOf:
                              - type: object
                                allOf:
                                  - type: object
                                    properties:
                                      tipoCliente:
                                        type: number
                                        format: integer
                                      nombre:
                                        type: string
                                      email:
                                        allOf:
                                          - type: string
                                            title: Email del usuario
                                            minLength: 5
                                            maxLength: 320
                                            example: correo@dominio.com
                                      RFC:
                                        type: string
                                      direcciones:
                                        type: array
                                        items:
                                          type: string
                                          example: Cerrada Tajin 12
                                      telefono:
                                        type: string
                                  - type: object
                                    required:
                                      - id
                                    properties:
                                      id:
                                        type: number
                                        format: integer
                          pagado:
                            type: boolean
                          fecha:
                            type: string
                            format: date
                            example: 10-09-2023
                          facturado:
                            type: boolean
                    properties:
                      productos:
                        type: array
                        items:
                          type: object
                          allOf:
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                            - type: object
                              required:
                                - producto
                                - cantidad
                              properties:
                                producto:
                                  type: number
                                  format: integer
                                  example: 8
                                cantidad:
                                  type: number
                                  format: integer
                                  example: 10
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    delete:
      summary: Elimina una venta
      description: Elimina una venta identificada por su id
      tags:
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
      responses:
        '200':
          description: Se ha eliminado la venta
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
  '/venta/{idVenta}/abono':
    summary: Catalogo de abonos de una venta
    description: Endpoint para realizar operaciones sobre el catalogo de abonos de una venta
    get:
      summary: Retorna los abonos registrados en una venta
      description: Retorna los abonos registrados en una venta
      tags:
        - Abono
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
      responses:
        '200':
          description: Se han retornado los abonos registrados en la venta
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  allOf:
                    - type: object
                      allOf:
                        - type: object
                          required:
                            - venta
                            - cantidad
                            - fecha
                          properties:
                            venta:
                              type: number
                              format: integer
                            cantidad:
                              type: number
                              format: decimal
                            fecha:
                              type: string
                              format: date
                        - type: object
                          required:
                            - id
                          properties:
                            id:
                              type: number
                              format: integer
        '204':
          description: No hay abonos registrados en esta venta
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
    post:
      summary: Registra un nuevo abono en la venta
      description: Registra un nuevo abono en la venta
      tags:
        - Abono
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - venta
                - cantidad
                - fecha
              properties:
                venta:
                  type: number
                  format: integer
                cantidad:
                  type: number
                  format: decimal
                fecha:
                  type: string
                  format: date
      responses:
        '201':
          description: Se ha registrado el abono en la venta
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    required:
                      - venta
                      - cantidad
                      - fecha
                    properties:
                      venta:
                        type: number
                        format: integer
                      cantidad:
                        type: number
                        format: decimal
                      fecha:
                        type: string
                        format: date
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: La solicitud o su contenido no es aceptable y no puede ser procesada
        '500':
          description: Error interno del servidor
  '/venta/{idVenta}/abono/{idAbono}':
    summary: Realiza operaciones sobre un abono
    description: Realiza operaciones sobre un abono identificado por su id
    put:
      summary: Actualiza la informacion del abono
      description: Actualiza la informacion del abono identificado por su id
      tags:
        - Abono
        - Venta
      parameters:
        - name: Token
          description: Token identificador de la sesion de usuario
          in: header
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
          required: true
        - name: id_venta
          description: Id de la venta
          in: path
          schema:
            type: number
            format: integer
          required: true
        - name: id_abono
          description: Id del abono
          in: path
          schema:
            type: number
            format: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - venta
                - cantidad
                - fecha
              properties:
                venta:
                  type: number
                  format: integer
                cantidad:
                  type: number
                  format: decimal
                fecha:
                  type: string
                  format: date
      responses:
        '200':
          description: Se ha actualizado la informacion del abono
          content:
            application/json:
              schema:
                type: object
                allOf:
                  - type: object
                    required:
                      - venta
                      - cantidad
                      - fecha
                    properties:
                      venta:
                        type: number
                        format: integer
                      cantidad:
                        type: number
                        format: decimal
                      fecha:
                        type: string
                        format: date
                  - type: object
                    required:
                      - id
                    properties:
                      id:
                        type: number
                        format: integer
        '400':
          description: La solicitud esta incompleta o malformada
        '404':
          description: El recurso buscado no se encuentra registrado
        '406':
          description: El token provisto es invalido o ha expirado
        '500':
          description: Error interno del servidor
