openapi: 3.0.0
info:
  title: PetLove Service
  version: 0.6.4
servers:
  - description: Produccion HTTPS
    url: https://petloveback-x7smt.ondigitalocean.app
components:
  headers:
    Token:
      schema:
        $ref: 'schemas.yaml#/components/schemas/token'
  responses:
    response_token:
      description: Token identificador de la sesion de usuario
      headers:
        Token:
          schema:
            type: string
            title: Token identificador de la sesion de usuario
            example: eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJkY29ycmVvMkBjb3JyZW8uY29tIiwiZXhwIjoxNzA0OTYwNjUzLCJ1c2VybmFtZ
    response_publicUsuario:
      description: .
      content:
        application/json:
          schema:
            $ref: 'schemas.yaml#/components/schemas/publicUsuario'
    invalid_token:
      description: El token provisto es invalido o ha expirado
    400:
      description: La solicitud esta incompleta o malformada
    404:
      description: El recurso buscado no se encuentra registrado
    406:
      description: La solicitud o su contenido no es aceptable y no puede ser procesada
    500:
      description: Error interno del servidor
paths:
  /usuario:
    summary: Catalogo de usuarios
    description: Endpoint para realizar diversas operaciones respecto al catalogo de usuarios del sistema
    get:
      summary: Obten los usuarios registrados
      description: Devuelve todos los usuarios registrados
      tags:
        - Usuario
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      responses:
        200:
          description: Se ha retornado por lo menos un usuario registrado
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: 'schemas.yaml#/components/schemas/publicUsuario'
                    - $ref: 'schemas.yaml#/components/schemas/publicUsuario'
                    - $ref: 'schemas.yaml#/components/schemas/publicUsuario'
        204:
          description: No hay ningun usuario registrado
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Crea un nuevo usuario en el sistema
      description: Crea un nuevo usuario en el sistema con la informacion provista
      tags:
        - Usuario
      requestBody:
        description: Informacion necesaria para registrar un nuevo usuario
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: 'schemas.yaml#/components/schemas/newUsuario'
              properties:
                token:
                  type: string
      responses:
        201:
          description: La solicitud fue exitosa y el nuevo usuario ha sido creado
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/publicUsuario'
          headers:
            Token:
              schema:
                $ref: 'schemas.yaml#/components/schemas/token'
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/406'
        409:
          description: El username o correo ya han sido registrados
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Elimina un usuario registrado
      description: Elimina de forma permanente la informacion de usuario identificado por sus credenciales
      tags:
        - Usuario
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      responses:
        200:
          description: La informacion del usuario ha sido eliminada.
        400:
          $ref: '#/components/responses/400'
        404:
          description: No se ha encontrado ningun usuario con esas credenciales
        406:
          description: El token provisto no coincide con las credenciales indicadas o ha expirado
        500:
          $ref: '#/components/responses/500'
  /usuario/login:
    summary: Inica sesion con un usuario registrado
    description: Obten un nuevo token con las credenciales de un usuario registrado
    post:
      summary: Inica sesion con un usuario registrado
      description: Obten un nuevo token con las credenciales de un usuario registrado
      tags:
        - Usuario
        - Sesion
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/loginCredentials'
      responses:
        200:
          description: Credenciales correctas y sesion iniciada
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/publicUsuario'
        400:
          $ref: '#/components/responses/400'
        404:
          description: Las credenciales no coinciden con ningun usuario registrado
        406:
          $ref: '#/components/responses/406'
        500:
          $ref: '#/components/responses/500'
  /usuario/token:
    get:
      summary: Obten la informacion de un usuario a partir de su token
      description: Comprueba la validez de un token y retorna la informacion asociada al token
      tags:
        - Usuario
        - Sesion
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      responses:
        200:
          description: El token es valido
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/publicUsuario'
        400:
          $ref: '#/components/responses/400'
        404:
          description: No existen registros de un usuario asociado al token
        406:
          description: El token es invalido o ya ha expirado
        500:
          $ref: '#/components/responses/500'
  /usuario/{username}/username:
    summary: Cambia el username de un usuario
    description: Actualiza el username de un usuario identificado por su username actual
    put:
      summary: Cambia el username de un usuario
      description: Actualiza el username de un usuario identificado por su username actual
      tags:
        - Usuario
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_username'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ username ]
              properties:
                username:
                  $ref: 'schemas.yaml#/components/schemas/username'
      responses:
        200:
          $ref: '#/components/responses/response_publicUsuario'
          description: Se ha actualizado el username del usuario
        400:
          $ref: '#/components/responses/400'
        404:
          description: El token no coincide con ningun usuario registrado
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: El nuevo username ya se encuentra en uso por otro usuario
        500:
          $ref: '#/components/responses/500'
  /usuario/{username}/email:
    summary: Cambia el email de un usuario
    description: Actualiza el email de un usuario identificado por su username
    put:
      summary: Cambia el email de un usuario
      description: Actualiza el email de un usuario identificado por su username
      tags:
        - Usuario
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/path_username'
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ email ]
              properties:
                email:
                  $ref: 'schemas.yaml#/components/schemas/email'
      responses:
        200:
          description: Se ha actualizado el email del usuario
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/publicUsuario'
        400:
          $ref: '#/components/responses/400'
        404:
          description: El token no coincide con ningun usuario registrado
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: El nuevo email ya se encuentra en uso por otro usuario
        500:
          $ref: '#/components/responses/500'
  /usuario/{username}/password:
    summary: Cambia la contraseña de un usuario
    description: Actualiza la contraseña del usuario identificado por su username
    put:
      summary: Cambia la contraseña de un usuario
      description: Actualiza la contraseña del usuario identificado por su username
      tags:
        - Usuario
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/path_username'
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required: [ password ]
              properties:
                password:
                  $ref: 'schemas.yaml#/components/schemas/password'
      responses:
        200:
            description: Se ha actualizado la contraseña del usuario
            content:
              application/json:
                schema:
                  $ref: 'schemas.yaml#/components/schemas/publicUsuario'
        400:
          $ref: '#/components/responses/400'
        404:
          description: El token no coincide con ningun usuario registrado
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /producto:
    summary: Catalogo de productos
    description: Endpoint para realizar operaciones sobre el catalogo de productos
    get:
      summary: Retorna los productos registrados
      description: Retorna los productos registrados
      tags:
        - Producto
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/query_producto_nombre'
        - $ref: 'parameters.yaml#/components/parameters/query_tipo_cliente'
      responses:
        200:
          description: Se ha retornado la informacion de los productos registrados. El precio depende del tipo de cliente
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/producto_array'
        204:
          description: No hay productos registrados
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Registra un nuevo producto
      description: Registra un nuevo producto
      tags:
        - Producto
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/newProducto'
      responses:
        201:
          description: Se ha registrado el producto
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/producto'
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /producto/{id_producto}:
    summary: Realiza operaciones sobre un producto
    description: Endpoint para realizaro operaciones sobre un producto identificado por su id
    delete:
      summary: Elimina un producto
      description: Elimina un producto identificado por su id
      tags:
        - Producto
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_producto_id'
      responses:
        200:
          description: Se ha eliminado el producto
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: El producto se encuentra registrado en una o mas ventas
        500:
          $ref: '#/components/responses/500'
  /producto/{id_producto}/precio:
    post:
      summary: Establece los precios del producto por tipo de cliente
      description: Establece los precios del producto por tipo de cliente
      tags:
        - Producto
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_producto_id'
        - $ref: 'parameters.yaml#/components/parameters/query_tipo_cliente'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/precio_array'
      responses:
        200:
          description: Se han actualizado los precios del producto
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /producto/detalles:
    patch:
      summary: Obten los detalles de una lista de productos
      description: Obten los detalles de una lista de productos de acuerdo a un tipo de cliente
      tags:
        - Producto
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/payload_producto_detalles'
      responses:
        200:
          description: Se ha retornado la informacion de los productos
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/producto_array'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /cliente:
    summary: Catalogo de clientes
    description: Endpoint para realizar operaciones sobre el catalogo de productos
    get:
      summary: Retorna los clientes registrados
      description: Retorna los clientes registrados
      tags:
        - Cliente
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/query_cliente_nombre'
        - $ref: 'parameters.yaml#/components/parameters/cantidad_clientes'
      responses:
        200:
          description: Se han retornado una version minima de los clientes registrados
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/minimal_cliente_array'
        202:
          description: Se han retornado los resultados de la busqueda de clientes
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/cliente_array'
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Registrar un nuevo cliente
      description: Registrar un nuevo cliente
      tags:
        - Cliente
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/cliente'
      responses:
        201:
          description: Se ha creado el cliente
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/cliente_record'
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: El email ya se encuentra registrado para otro cliente
        500:
          $ref: '#/components/responses/500'
  /cliente/{id_cliente}:
    summary: Realiza operaciones sobre un cliente
    description: Endpoint para realizar operaciones sobre un cliente identificado por su id
    put:
      summary: Actualiza la informacion de un cliente
      description: Actualiza la informacion de un cliente identificado por su id
      tags:
        - Cliente
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_cliente_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/cliente'
      responses:
        200:
          description: Se ha actualizado la informacion del cliente
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/cliente_record'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: El email ya se encuentra registrado para otro cliente
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Elimina un cliente
      description: Elimina una cliente identificado por su id
      tags:
        - Cliente
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_cliente_id'
      responses:
        200:
          description: Se ha eliminado el cliente
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /venta:
    summary: Catalogo de ventas
    description: Endpoint para realizar operaciones sobre el catalogo de ventas
    get:
      summary: Retorna las ventas registradas
      description: Retorna las ventas registradas con sus productos
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      responses:
        200:
          description: Se han retornado las ventas registradas
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/venta_record_array'
        204:
          description: No hay ventas registradas
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Registra una nueva venta
      description: Registra una nueva venta
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/nueva_venta'
      responses:
        201:
          description: Se ha registrado la venta
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/venta_record'
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        409:
          description: No hay inventario suficiente para cumplir la venta
        500:
          $ref: '#/components/responses/500'
  /venta/buscar:
    summary: Endpoint para realizar busquedas sobre las ventas
    description: Endpoint para realizar busquedas sobre las ventas
    get:
      summary: Endpoint para realizar busquedas sobre las ventas
      description: Endpoint para realizar busquedas sobre las ventas
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/query_cliente_nombre'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_producto'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_dia'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_mes'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_anio'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_pagado'
        - $ref: 'parameters.yaml#/components/parameters/query_venta_size'
        - $ref: 'parameters.yaml#/components/parameters/query_enviar_csv'
      responses:
        200:
          description: Se ha retornado la informacion de las ventas
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/venta_record_array'
        201:
          description: Se ha enviado el reporte con los resultados de la busqueda
        204:
          description: No hay ventas que coincidan con la busqueda
        400:
          $ref: '#/components/responses/400'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /venta/{id_venta}:
    summary: Realiza operaciones sobre una venta
    description: Realiza operaciones sobre una venta identificada por su id
    get:
      summary: Retorna la informacion de la venta
      description: Retorna la informacion registrada de la venta identificada por su id
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
      responses:
        200:
          description: Se ha retornado la informacion de la venta
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/venta_record'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    put:
      summary: Actualiza la informacion de una venta
      description: Actualiza la informacion de una venta identificada por su id
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/venta_vacia'
      responses:
        200:
          description: Se ha actualizado la informacion de la venta
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/venta_record'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: Elimina una venta
      description: Elimina una venta identificada por su id
      tags:
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
      responses:
        200:
          description: Se ha eliminado la venta
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
  /venta/{idVenta}/abono:
    summary: Catalogo de abonos de una venta
    description: Endpoint para realizar operaciones sobre el catalogo de abonos de una venta
    get:
      summary: Retorna los abonos registrados en una venta
      description: Retorna los abonos registrados en una venta
      tags:
        - Abono
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
      responses:
        200:
          description: Se han retornado los abonos registrados en la venta
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/abono_record_array'
        204:
          description: No hay abonos registrados en esta venta
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
    post:
      summary: Registra un nuevo abono en la venta
      description: Registra un nuevo abono en la venta
      tags:
        - Abono
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/abono'
      responses:
        201:
          description: Se ha registrado el abono en la venta
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/abono_record'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/406'
        500:
          $ref: '#/components/responses/500'
  /venta/{idVenta}/abono/{idAbono}:
    summary: Realiza operaciones sobre un abono
    description: Realiza operaciones sobre un abono identificado por su id
    put:
      summary: Actualiza la informacion del abono
      description: Actualiza la informacion del abono identificado por su id
      tags:
        - Abono
        - Venta
      parameters:
        - $ref: 'parameters.yaml#/components/parameters/header_token'
        - $ref: 'parameters.yaml#/components/parameters/path_venta_id'
        - $ref: 'parameters.yaml#/components/parameters/path_abono_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: 'schemas.yaml#/components/schemas/abono'
      responses:
        200:
          description: Se ha actualizado la informacion del abono
          content:
            application/json:
              schema:
                $ref: 'schemas.yaml#/components/schemas/abono_record'
        400:
          $ref: '#/components/responses/400'
        404:
          $ref: '#/components/responses/404'
        406:
          $ref: '#/components/responses/invalid_token'
        500:
          $ref: '#/components/responses/500'
